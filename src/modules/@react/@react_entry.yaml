-
    prefix: '@react_entry'
    body: >-
        import React from 'react';

        import ReactDOM from 'react-dom';

        import {Provider} from 'react-redux';

        // import store from './redux/store.js';

        // import App from './router';


        // createstore

        import {createStore, combineReducers, applyMiddleware, compose} from
        'redux';

        import * as home from './home/reducer.js';

        import dataBoardCreate from './dataBoardCreate/reducer.js';

        import dataGroup from './dataGroup/reducer.js';

        import sourceAdd from './sourceAdd/reducer.js';

        import chartData from './chartData/reducer.js';

        import thunk from 'redux-thunk';

        const store = createStore(
            combineReducers({...home, dataBoardCreate, dataGroup, sourceAdd, chartData}),
            compose(
                applyMiddleware(thunk),
                window.devToolsExtension ? window.devToolsExtension() : f => f
            )
        );


        // router

        import {BrowserRouter, Route, Switch} from 'react-router-dom';

        import DashBoard from 'path/to/DashBoard';

        import Login from 'path/to/Login';

        import Register from 'path/to/Register';

        // react-router4 不推荐集中路由 组件在哪里匹配就在哪里渲染

        const App = () => (
            <BrowserRouter>
                <Switch>
                    <Route path="/login" component={Login} />
                    <Route path="/register" component={Register} />
                    <Route component={DashBoard} />
                </Switch>
            </BrowserRouter>
        );


        // index.js内容

        const render = Component => {
            ReactDOM.render(
                <Provider store={store}>
                    <Component />
                </Provider>
                , document.querySelector("#root")
            )
        };


        render(App);
    description: '入口包含：store,router,render'
